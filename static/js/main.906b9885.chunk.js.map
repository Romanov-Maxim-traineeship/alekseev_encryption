{"version":3,"sources":["utils/ramda.js","components/1/encrypter.js","components/1/index.js","App.js","reportWebVitals.js","index.js"],"names":["getPath","_p","compose","when","is","String","p","split","Array","join","getIn","curry","v","path","isNotDefined","defaultValue","pathOr","anyPass","isEmpty","isNil","makePropLens","complement","keysMap","obj","reduce","acc","key","assoc","keys","lens","assocPath","params","lensKey","set","view","addIndex","map","f1","f2","arg","or","equals","makeEncrypter","alphabet","alphabetWithUpperChars","pipe","toUpper","concat","encryptText","char","arr","partialRight","findIndex","ifElse","always","subtract","length","nth","getCharByIndex","TextArea","Input","FirstExersice","props","inputRef","useRef","useState","decryptedValue","setDecryptedValue","encryptedValue","setEncryptedValue","useEffect","encryptedInput","document","getElementById","fromEvent","tap","subscribe","encrypter","decryptedInput","className","id","value","ref","placeholder","autoSize","minRows","ArrowUpOutlined","ArrowDownOutlined","disabled","Header","Layout","Sider","Content","App","collapsed","setCollapsed","toggle","partial","not","style","minHeight","trigger","collapsible","theme","mode","defaultSelectedKeys","Item","icon","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.906b9885.chunk.js","sourcesContent":["import {\n  addIndex,\n  map,\n  lens,\n  set,\n  view,\n  keys,\n  or,\n  reduce,\n  curry,\n  assoc,\n  anyPass,\n  isEmpty,\n  equals,\n  isNil,\n  complement,\n  compose,\n  when,\n  is,\n  split,\n  pathOr,\n  path,\n  assocPath,\n  join,\n} from \"ramda\";\n\nexport const getPath = (_p) =>\n  compose(\n    when(is(String), (p) => [...split(\".\", p)]),\n    when(is(Array), compose(getPath, join(\".\")))\n  )(_p);\n\nexport const getIn = curry((p, v) => path(getPath(p), v));\nexport const getInOr = curry((defaultValue, p, v) =>\n  pathOr(defaultValue, getPath(p), v)\n);\n\nexport const isNotDefined = anyPass([isEmpty, isNil]);\n\nexport const isDefined = complement(isNotDefined);\n\nexport const renameKeys = curry((keysMap, obj) =>\n  reduce((acc, key) => assoc(keysMap[key] || key, obj[key], acc), {}, keys(obj))\n);\n\nconst makePropLens = (key) => lens(getIn(key), assocPath(getPath(key)));\nexport const setParam = curry((params, lensKey, key) =>\n  set(makePropLens(lensKey), key, params)\n);\nexport const getParam = curry((params, lensKey) =>\n  view(makePropLens(lensKey), params)\n);\n\nexport const mapIndexed = addIndex(map);\n\nexport const alt = curry((f1, f2, arg) => or(f1(arg), f2(arg)));\n\nexport const fork = (joinFunction, f1, f2) => (val) =>\n  joinFunction(f1(val), f2(val));\n\nexport const notEquals = complement(equals);\n","import {\n  subtract,\n  concat,\n  map,\n  length,\n  partialRight,\n  findIndex,\n  equals,\n  nth,\n  ifElse,\n  always,\n  join,\n  toUpper,\n} from \"ramda\";\nimport { pipe } from \"rxjs\";\n\nexport const CYRILLIC = [\n  \"а\",\n  \"б\",\n  \"в\",\n  \"г\",\n  \"д\",\n  \"е\",\n  \"ё\",\n  \"ж\",\n  \"з\",\n  \"и\",\n  \"й\",\n  \"к\",\n  \"л\",\n  \"м\",\n  \"н\",\n  \"о\",\n  \"п\",\n  \"р\",\n  \"с\",\n  \"т\",\n  \"у\",\n  \"ф\",\n  \"х\",\n  \"ц\",\n  \"ч\",\n  \"ш\",\n  \"щ\",\n  \"ь\",\n  \"ы\",\n  \"ъ\",\n  \"э\",\n  \"ю\",\n  \"я\",\n];\n\nconst getCharIndex = (arr) => pipe(equals, partialRight(findIndex, [arr]));\n\nconst getCharByIndex = (arr) =>\n  pipe(subtract(length(arr) / 2 - 1), partialRight(nth, [arr]));\n\nconst makeEncrypter = (alphabet) => {\n  const alphabetWithUpperChars = pipe(map(toUpper), concat(alphabet))(alphabet);\n\n  const encryptChar = (char) =>\n    pipe(\n      getCharIndex(alphabetWithUpperChars),\n      ifElse(equals(-1), always(char), getCharByIndex(alphabetWithUpperChars))\n    )(char);\n\n  const encryptText = pipe(map(encryptChar), join(\"\"));\n\n  return {\n    encryptText,\n  };\n};\n\nexport default makeEncrypter(CYRILLIC);\n","import \"./style.css\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Input } from \"antd\";\nimport { fromEvent } from \"rxjs\";\nimport { map, tap } from \"rxjs/operators\";\nimport { pipe } from \"ramda\";\n\nimport { ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons\";\n\nimport { getIn, isNotDefined } from \"../../utils/ramda\";\n\nimport encrypter from \"./encrypter\";\n\nconst { TextArea } = Input;\n\nconst FirstExersice = (props) => {\n  const inputRef = useRef(null);\n  const [decryptedValue, setDecryptedValue] = useState(\"\");\n  const [encryptedValue, setEncryptedValue] = useState(\"\");\n\n  useEffect(() => {\n    const encryptedInput = document.getElementById(\"encrypted\");\n    fromEvent(encryptedInput, \"input\")\n      .pipe(map(getIn(\"target.value\")), tap(setEncryptedValue))\n      .subscribe(pipe(encrypter.encryptText, setDecryptedValue));\n  }, []);\n\n  useEffect(() => {\n    const decryptedInput = document.getElementById(\"decrypted\");\n    fromEvent(decryptedInput, \"input\")\n      .pipe(map(getIn(\"target.value\")), tap(setDecryptedValue))\n      .subscribe(pipe(encrypter.encryptText, setEncryptedValue));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <TextArea\n        id=\"encrypted\"\n        value={encryptedValue}\n        ref={inputRef}\n        placeholder=\"Зашифрованный текст\"\n        autoSize={{ minRows: 4 }}\n      />\n\n      <div className=\"arrows\">\n        <ArrowUpOutlined />\n        <ArrowDownOutlined />\n      </div>\n\n      <TextArea\n        id=\"decrypted\"\n        value={decryptedValue}\n        placeholder=\"Расшифрованный текст\"\n        autoSize={{ minRows: 4 }}\n        disabled={isNotDefined(decryptedValue)}\n      />\n    </div>\n  );\n};\n\nexport default FirstExersice;\n","import \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nimport React, { useState } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport { partial, not } from \"ramda\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\n\nimport FirstExersice from \"./components/1\";\n\nconst { Header, Sider, Content } = Layout;\n\nfunction App() {\n  const [collapsed, setCollapsed] = useState(false);\n  const toggle = partial(setCollapsed, [not]);\n\n  return (\n    <Layout style={{ minHeight: \"100%\" }}>\n      <Sider trigger={null} collapsible collapsed={collapsed}>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\n          <Menu.Item key=\"1\" icon={<span>1</span>}>\n            Обратная подстановка\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          {React.createElement(\n            collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n            {\n              className: \"trigger\",\n              onClick: toggle,\n            }\n          )}\n        </Header>\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            margin: \"24px 16px\",\n            padding: 24,\n            minHeight: 280,\n          }}\n        >\n          <FirstExersice />\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}